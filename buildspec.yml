version: 0.2

env:
  variables:
    # Defaults and can be overwritten by CodeBuild or CodePipeline
    TF_VERSION: "0.12.18"
    REGION: "eu-west-1"
    ADMIN_IP_ADDRESS: "0.0.0.0/0"  
    ENVIRONMENT: "dev"    
    TF_ACTION: ""  
    
phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      # install required binary
      - "curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq"
      - "chmod +x /usr/bin/jq"
      - "cd /usr/bin"
      - "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - "unzip -o terraform.zip"
  pre_build:
    commands:
      # Workaround until TF supports creds via Task Roles when running on ECS or CodeBuild
      # See: https://github.com/hashicorp/terraform/issues/8746
      - export AWS_RAW_CRED=$(curl --silent http://169.254.170.2:80$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI)
      - export AWS_ACCESS_KEY_ID=$(echo $AWS_RAW_CRED | jq -r '.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo $AWS_RAW_CRED | jq -r '.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo $AWS_RAW_CRED | jq -r '.Token')
      - export AWS_DEFAULT_REGION="${REGION}"
      - export TF_VAR_admin_workstation_ip="${ADMIN_IP_ADDRESS}"
      - echo --------------------START ENVIRONMENT VARIABLES--------------------
      - env
      - echo --------------------END ENVIRONMENT VARIABLES--------------------
  build:
    commands:
      - cd "$CODEBUILD_SRC_DIR"
      - cd "envs/${ENVIRONMENT}"
      - terraform init -no-color
      - terraform plan -var image=blankia/hello-world -var build_number=$CODEBUILD_BUILD_ID -no-color
      - if [ -n "${TF_ACTION}" ] ; then ${TF_ACTION} -var image=blankia/hello-world -var build_number=$CODEBUILD_BUILD_ID ; fi
  post_build:
    commands:
      - echo "terraform  completed on `date`"

artifacts:
  files:
    - '**/*'